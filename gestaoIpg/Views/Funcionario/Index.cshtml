@model FuncionarioViewModel<gestaoIpg.Models.Funcionario>

@*model FuncionarioViewModel*@

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


    <div class="container" style="color:black">
        <h2>Index</h2>

        <p>
            <a asp-action="Create" class="btn btn-success">Novo</a>
        </p>
        <form asp-action="Index" method="get">
            <div class="form-actions no-color">
                <p style="color:black">
                    Procura por nome:&nbsp;  <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
                    &nbsp;
                    <input type="submit" value="Procurar" class="btn btn-outline-info" /> |
                    <a asp-action="Index" class="btn btn-outline-info">Voltar a lista inicial</a>
                </p>
            </div>
        </form>

        <table class="table">
            <thead>
                <tr>
                    <th>
                        @*Html.DisplayNameFor(model => model.Funcionario.FirstOrDefault().Nome)*@
                        <h5>Nome</h5>
                    </th>
                    <th>
                        @*Html.DisplayNameFor(model => model.Funcionario.FirstOrDefault().Morada)*@
                        <h5>Morada</h5>
                    </th>
                    <th>
                        @*Html.DisplayNameFor(model => model.Funcionario.FirstOrDefault().Email)*@
                        <h5>Email</h5>
                    </th>
                    <th>
                        @*Html.DisplayNameFor(model => model.Funcionario.FirstOrDefault().Telemovel)*@
                        <h5>Telemóvel</h5>
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" style=" color:black" class="btn btn-link">Ordenar por ordem alfabética</a>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Nome)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Morada)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Telemovel)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.FuncionarioId" class="btn btn-warning">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.FuncionarioId" class="btn btn-info">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.FuncionarioId" class="btn btn-danger">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }

        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @prevDisabled">
            Anterior
        </a>
        &nbsp;
        @for (int i = Model.PageIndex; i <= Model.TotalPages; i++)
        {
            @if (i == Model.PageIndex)
            {

                <label href="#">@i</label>
            }
        }
        &nbsp;
        &nbsp;
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @nextDisabled">
            Seguinte
        </a>

    </div>